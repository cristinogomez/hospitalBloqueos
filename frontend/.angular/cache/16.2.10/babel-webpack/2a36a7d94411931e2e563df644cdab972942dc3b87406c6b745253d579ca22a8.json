{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class OrderBYPipe {\n  transform(value, ...args) {\n    if (!Array.isArray(value)) {\n      return value;\n    }\n    const [order = 'asc'] = args;\n    return value.sort((a, b) => {\n      const compare = a.fecha.localeCompare(b.fecha);\n      return order === 'asc' ? compare : -compare;\n    });\n  }\n  static #_ = this.ɵfac = function OrderBYPipe_Factory(t) {\n    return new (t || OrderBYPipe)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"orderBy\",\n    type: OrderBYPipe,\n    pure: true\n  });\n}","map":{"version":3,"names":["OrderBYPipe","transform","value","args","Array","isArray","order","sort","a","b","compare","fecha","localeCompare","_","_2","pure"],"sources":["/Users/cristinogomezgomez/Documents/CursoMEAN/frontend/src/app/pipes/order-by.pipes.ts"],"sourcesContent":["import { Pipe, PipeTransform } from \"@angular/core\";\nimport { Bloqueo } from \"../modelos/bloqueo\";\n\n@Pipe({\n    name:'orderBy'\n})\n\nexport class OrderBYPipe implements PipeTransform{\n    transform(value: Bloqueo[], ...args: any[]):Bloqueo[]{\n        if(!Array.isArray(value)){\n            return value;\n        }\n\n        const[order='asc']= args;\n        return value.sort((a,b)=> {\n            const compare=a.fecha.localeCompare(b.fecha);\n            return order === 'asc' ? compare:-compare;\n        })\n\n    }\n}"],"mappings":";AAOA,OAAM,MAAOA,WAAW;EACpBC,SAASA,CAACC,KAAgB,EAAE,GAAGC,IAAW;IACtC,IAAG,CAACC,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,EAAC;MACrB,OAAOA,KAAK;;IAGhB,MAAK,CAACI,KAAK,GAAC,KAAK,CAAC,GAAEH,IAAI;IACxB,OAAOD,KAAK,CAACK,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAG;MACrB,MAAMC,OAAO,GAACF,CAAC,CAACG,KAAK,CAACC,aAAa,CAACH,CAAC,CAACE,KAAK,CAAC;MAC5C,OAAOL,KAAK,KAAK,KAAK,GAAGI,OAAO,GAAC,CAACA,OAAO;IAC7C,CAAC,CAAC;EAEN;EAAC,QAAAG,CAAA,G;qBAZQb,WAAW;EAAA;EAAA,QAAAc,EAAA,G;;UAAXd,WAAW;IAAAe,IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}