{"ast":null,"code":"import { Bloqueo } from '../modelos/bloqueo';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BloqueoService {\n  //readonly URL_API = 'https://cursomean-production.up.railway.app/api/bloqueos';\n  constructor(http) {\n    this.http = http;\n    this.URL_API = 'http://localhost:3000/api/bloqueos';\n    this.selectedBloqueo = new Bloqueo();\n  }\n  getBloqueos() {\n    return this.http.get(this.URL_API);\n  }\n  addBloqueo(bloqueo) {\n    return this.http.post(this.URL_API, bloqueo);\n  }\n  putBloqueo(bloqueo) {\n    return this.http.put(this.URL_API + `/${bloqueo._id}`, bloqueo);\n  }\n  deleteBloqueo(_id) {\n    return this.http.delete(this.URL_API + `/${_id}`);\n  }\n  static #_ = this.ɵfac = function BloqueoService_Factory(t) {\n    return new (t || BloqueoService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BloqueoService,\n    factory: BloqueoService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["Bloqueo","BloqueoService","constructor","http","URL_API","selectedBloqueo","getBloqueos","get","addBloqueo","bloqueo","post","putBloqueo","put","_id","deleteBloqueo","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/cristinogomezgomez/Documents/CursoMEAN/frontend/src/app/servicios/bloqueo.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Bloqueo } from '../modelos/bloqueo';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BloqueoService {\n\n  selectedBloqueo:Bloqueo;\n\n  bloqueos!:Bloqueo[];\n  \n  readonly URL_API = 'http://localhost:3000/api/bloqueos';\n  //readonly URL_API = 'https://cursomean-production.up.railway.app/api/bloqueos';\n\n  constructor(public http:HttpClient) { \n    this.selectedBloqueo=new Bloqueo();\n  }\n  \n  getBloqueos(){\n    return this.http.get(this.URL_API);\n  }\n\n  addBloqueo(bloqueo:Bloqueo){\n    return this.http.post(this.URL_API, bloqueo);\n  }\n  putBloqueo(bloqueo:Bloqueo){\n    return this.http.put(this.URL_API + `/${bloqueo._id}`, bloqueo);\n  }\n  deleteBloqueo(_id:string){\n    return this.http.delete(this.URL_API + `/${_id}`);\n  }\n}\n"],"mappings":"AAEA,SAASA,OAAO,QAAQ,oBAAoB;;;AAK5C,OAAM,MAAOC,cAAc;EAOzB;EAEAC,YAAmBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAHd,KAAAC,OAAO,GAAG,oCAAoC;IAIrD,IAAI,CAACC,eAAe,GAAC,IAAIL,OAAO,EAAE;EACpC;EAEAM,WAAWA,CAAA;IACT,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,IAAI,CAACH,OAAO,CAAC;EACpC;EAEAI,UAAUA,CAACC,OAAe;IACxB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,IAAI,CAACN,OAAO,EAAEK,OAAO,CAAC;EAC9C;EACAE,UAAUA,CAACF,OAAe;IACxB,OAAO,IAAI,CAACN,IAAI,CAACS,GAAG,CAAC,IAAI,CAACR,OAAO,GAAG,IAAIK,OAAO,CAACI,GAAG,EAAE,EAAEJ,OAAO,CAAC;EACjE;EACAK,aAAaA,CAACD,GAAU;IACtB,OAAO,IAAI,CAACV,IAAI,CAACY,MAAM,CAAC,IAAI,CAACX,OAAO,GAAG,IAAIS,GAAG,EAAE,CAAC;EACnD;EAAC,QAAAG,CAAA,G;qBAzBUf,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdpB,cAAc;IAAAqB,OAAA,EAAdrB,cAAc,CAAAsB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}